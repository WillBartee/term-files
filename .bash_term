parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

numFiles() {
	ls -1a | wc -l | sed 's: ::g'
}

fileSize() {
	ls -lah | grep -m 1 total | sed 's/total //'
}

export OBRAC="$LCYAN["
export EBRAC="$LCYAN]"

export PSUSER="$OBRAC$YELLOW\u"
export PSAT="$DGRAY@"
export PSCOMP="$YELLOW\h$EBRAC"
export PSDIR="$GRAYHL$LCYAN\w$NONE"
export LSER="$OBRAC$BLACK$GRAYHL\$(numFiles) files, \$(fileSize)b$NONE$EBRAC"

export PSP1="$BLUEHL$PSUSER$PSAT$PSCOMP$PSDIR$LSER"
export PSP2="\n$OBRAC$BLACK$GRAYHL\!$NONE$EBRAC$OBRAC$LCYAN\j$NONE$EBRAC$OBRAC$NONE\$$EBRAC› $NONE"
export PSGBR="$OBRAC\$(parse_git_branch)$EBRAC"

isGitBash() {
	pwd | grep cyg
}
if [ $0 = "/usr/bin/bash" ]; then 
    echo 'This is Git Bash'
    export PS1="\n$LCYAN[GitBash]$NONE\[\e[30;1m\]\[\016\]\[\017\](\[\e[34;1m\]\u@\h\[\e[30;1m\])-(\[\e[34;1m\]\j\[\e[30;1m\])-(\[\e[34;1m\]\@ \d\[\e[30;1m\])->\[\e[30;1m\]\n\[\016\]\[\017\](\[\[\e[32;1m\]\w\[\e[30;1m\])[\$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')](\[\e[32;1m\]\$(/bin/ls -1 | /usr/bin/wc -l | /bin/sed 's: ::g') files, \$(/bin/ls -lah | /bin/grep -m 1 total | /bin/sed 's/total //')b\[\e[30;1m\])--> \[\e[0m\]"
    #export PS1="\n[\u@\h][\w][\$(ls -1a | wc -l | sed 's: ::g') files, \$(ls -lah | grep -m 1 total | sed 's/total //')b][\$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')][\!][\j][$]›"
    #export PS1="\n\[\e[44m\]\[\e[1;36m\][\[\e[1;33m\]\u\[\e[90m\]@\[\e[1;33m\]\h\[\e[1;36m\]]\[\e[100m\]\[\e[1;36m\]\w\[\e[0m\]\[\e[1;36m\][\[\e[0;30m\]\[\e[100m\]$(numFiles) files, $(fileSize)b\[\e[0m\]\[\e[1;36m\]]\[\e[1;36m\][$(parse_git_branch)\[\e[1;36m\]]\n\[\e[1;36m\][\[\e[0;30m\]\[\e[100m\]\!\[\e[0m\]\[\e[1;36m\]]\[\e[1;36m\][\[\e[1;36m\]\j\[\e[0m\]\[\e[1;36m\]]\[\e[1;36m\][\[\e[0m\]$\[\e[1;36m\]]› \[\e[0m\]"

else
	export PS1="\n$PSP1$PSGBR$PSP2"
fi

case "$TERM" in xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
    *)
    ;;
    esac
